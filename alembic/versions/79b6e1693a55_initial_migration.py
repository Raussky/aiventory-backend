"""Initial migration

Revision ID: 79b6e1693a55
Revises: 
Create Date: 2025-04-20 08:43:06.174876

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '79b6e1693a55'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sid', sa.String(length=22), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_category_sid'), 'category', ['sid'], unique=True)
    op.create_table('user',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('role', sa.Enum('OWNER', 'ADMIN', 'MANAGER', name='userrole'), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sid', sa.String(length=22), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_sid'), 'user', ['sid'], unique=True)
    op.create_table('product',
    sa.Column('category_sid', sa.String(length=22), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('barcode', sa.String(), nullable=True),
    sa.Column('default_unit', sa.String(), nullable=True),
    sa.Column('default_price', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sid', sa.String(length=22), nullable=False),
    sa.ForeignKeyConstraint(['category_sid'], ['category.sid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('barcode')
    )
    op.create_index(op.f('ix_product_sid'), 'product', ['sid'], unique=True)
    op.create_table('upload',
    sa.Column('user_sid', sa.String(length=22), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('rows_imported', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sid', sa.String(length=22), nullable=False),
    sa.ForeignKeyConstraint(['user_sid'], ['user.sid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_upload_sid'), 'upload', ['sid'], unique=True)
    op.create_table('verificationtoken',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(length=6), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sid', sa.String(length=22), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_verificationtoken_sid'), 'verificationtoken', ['sid'], unique=True)
    op.create_table('prediction',
    sa.Column('product_sid', sa.String(length=22), nullable=False),
    sa.Column('timeframe', sa.Enum('DAY', 'WEEK', 'MONTH', name='timeframe'), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('forecast_qty', sa.Float(), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('model_version', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sid', sa.String(length=22), nullable=False),
    sa.ForeignKeyConstraint(['product_sid'], ['product.sid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prediction_sid'), 'prediction', ['sid'], unique=True)
    op.create_table('warehouseitem',
    sa.Column('upload_sid', sa.String(length=22), nullable=False),
    sa.Column('product_sid', sa.String(length=22), nullable=False),
    sa.Column('batch_code', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('expire_date', sa.Date(), nullable=True),
    sa.Column('received_at', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('IN_STOCK', 'MOVED', 'DISCARDED', name='warehouseitemstatus'), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sid', sa.String(length=22), nullable=False),
    sa.ForeignKeyConstraint(['product_sid'], ['product.sid'], ),
    sa.ForeignKeyConstraint(['upload_sid'], ['upload.sid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_warehouseitem_sid'), 'warehouseitem', ['sid'], unique=True)
    op.create_table('storeitem',
    sa.Column('warehouse_item_sid', sa.String(length=22), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('moved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'REMOVED', name='storeitemstatus'), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sid', sa.String(length=22), nullable=False),
    sa.ForeignKeyConstraint(['warehouse_item_sid'], ['warehouseitem.sid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_storeitem_sid'), 'storeitem', ['sid'], unique=True)
    op.create_table('discount',
    sa.Column('store_item_sid', sa.String(length=22), nullable=False),
    sa.Column('percentage', sa.Float(), nullable=False),
    sa.Column('starts_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_sid', sa.String(length=22), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sid', sa.String(length=22), nullable=False),
    sa.ForeignKeyConstraint(['created_by_sid'], ['user.sid'], ),
    sa.ForeignKeyConstraint(['store_item_sid'], ['storeitem.sid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_discount_sid'), 'discount', ['sid'], unique=True)
    op.create_table('sale',
    sa.Column('store_item_sid', sa.String(length=22), nullable=False),
    sa.Column('sold_qty', sa.Integer(), nullable=False),
    sa.Column('sold_price', sa.Float(), nullable=False),
    sa.Column('sold_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cashier_sid', sa.String(length=22), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sid', sa.String(length=22), nullable=False),
    sa.ForeignKeyConstraint(['cashier_sid'], ['user.sid'], ),
    sa.ForeignKeyConstraint(['store_item_sid'], ['storeitem.sid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sale_sid'), 'sale', ['sid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sale_sid'), table_name='sale')
    op.drop_table('sale')
    op.drop_index(op.f('ix_discount_sid'), table_name='discount')
    op.drop_table('discount')
    op.drop_index(op.f('ix_storeitem_sid'), table_name='storeitem')
    op.drop_table('storeitem')
    op.drop_index(op.f('ix_warehouseitem_sid'), table_name='warehouseitem')
    op.drop_table('warehouseitem')
    op.drop_index(op.f('ix_prediction_sid'), table_name='prediction')
    op.drop_table('prediction')
    op.drop_index(op.f('ix_verificationtoken_sid'), table_name='verificationtoken')
    op.drop_table('verificationtoken')
    op.drop_index(op.f('ix_upload_sid'), table_name='upload')
    op.drop_table('upload')
    op.drop_index(op.f('ix_product_sid'), table_name='product')
    op.drop_table('product')
    op.drop_index(op.f('ix_user_sid'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_category_sid'), table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###
