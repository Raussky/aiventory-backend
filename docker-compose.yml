version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: inventory_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inventory
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: inventory_redis
    command: redis-server --appendonly yes --requirepass redis-password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "-a", "redis-password", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory_api
    env_file:
      - .env
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory_celery_worker
    env_file:
      - .env
    volumes:
      - ./app:/app/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.tasks.celery_app worker --loglevel=info --concurrency=2

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory_celery_beat
    env_file:
      - .env
    volumes:
      - ./app:/app/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.tasks.celery_app beat --loglevel=info

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory_flower
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A app.tasks.celery_app flower --port=5555

  nginx:
    image: nginx:alpine
    container_name: inventory_nginx
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    ports:
      - "80:80"
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: inventory_network